{"version":3,"sources":["src/js/classes/Navigationsleiste.js","src/js/classes/Fehlerbox.js","src/js/classes/Eingabeformular.js","src/js/classes/Monatsliste.js","src/js/classes/Monatslistensammlung.js","src/js/classes/Gesamtbilanz.js","src/js/classes/Eintrag.js","src/js/classes/Haushaltsbuch.js","src/js/budget.js"],"names":["Navigationsleiste","_html","_html_generieren","navigationsleiste","document","createElement","setAttribute","anker","span","textContent","insertAdjacentElement","body","querySelector","Fehlerbox","fehlertext","formular_fehler","_fehlertext","_formular_fehler","fehlerbox","fehlerliste","forEach","fehler","fehlerlistenpunkt","bestehende_fehlerbox","remove","_entfernen","eingabeformular_container","Eingabeformular","submit_event","titel","target","elements","value","betrag","einnahme","checked","datum","valueAsDate","formulardaten","trim","typ","parseFloat","push","isNaN","datums_input","Date","eingabeformular","addEventListener","e","preventDefault","_formulardaten_verarbeiten","_formulardaten_holen","_formulardaten_validieren","length","eintrag_hinzufuegen","reset","_datum_aktualisieren","anzeigen","innerHTML","_absenden_event_hinzufuegen","Monatsliste","jahr","monat","_jahr","_monat","_eintraege","_bilanz","eintrag","_aktualisieren","sort","eintrag_a","eintrag_b","timestamp","monatsbilanz","monatsliste","ueberschrift","monat_jahr","toLocaleString","month","year","toFixed","replace","eintragsliste","html","_eintraege_sortieren","_bilanzieren","Monatslistensammlung","_monatslisten","eintragsmonat","eintragsjahr","monatsliste_vorhanden","_monatsliste_hinzufuegen","neue_monatsliste","monatsliste_a","monatsliste_b","monatslisten","eintraege","_eintrag_hinzufuegen","_monatslisten_sortieren","monatslistensammlung","Gesamtbilanz","_einnahmen","_ausgaben","console","log","gesamtbilanz","einnahmen_zeile","einnahmen_titel","einnahmen_betrag","ausgaben_zeile","ausgaben_titel","ausgaben_betrag","bilanz_zeile","bilanz_titel","bilanz_betrag","Eintrag","_titel","_betrag","_typ","_datum","_timestamp","now","listenpunkt","parentElement","getAttribute","eintrag_entfernen","toLocaleDateString","day","button","icon","_eintrag_entfernen_event_hinzufuegen","Haushaltsbuch","_navigationsleiste","_eingabeformular","_monatslistensammlung","_gesamtbilanz","_wiederherstellen","eintragsdaten","neuer_eintrag","aktualisieren","_speichern","start_index","i","parseInt","splice","localStorage","setItem","JSON","stringify","gespeicherte_eintraege","getItem","parse","budget","start"],"mappings":";AAgCG,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EA/BkBA,IAAAA,EAAAA,WAGL,SAAA,IAAA,EAAA,KAAA,GACPC,KAAAA,MAAQ,KAAKC,mBA2BnB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,mBAvBD,MAAA,WACMC,IAAAA,EAAoBC,SAASC,cAAc,OAC/CF,EAAkBG,aAAa,KAAM,qBAEjCC,IAAAA,EAAQH,SAASC,cAAc,KACnCE,EAAMD,aAAa,OAAQ,KAEvBE,IAAAA,EAAOJ,SAASC,cAAc,QAO3BF,OANPK,EAAKF,aAAa,KAAM,cACxBE,EAAKC,YAAc,oCACnBF,EAAMG,sBAAsB,aAAcF,GAE1CL,EAAkBO,sBAAsB,aAAcH,GAE/CJ,IASR,CAAA,IAAA,WALD,MAAA,WACMQ,IAAAA,EAAOP,SAASQ,cAAc,QACrB,OAATD,GACFA,EAAKD,sBAAsB,aAAc,KAAKT,WAEjD,EA/BkBD,GA+BlB,QAAA,QAAA;;ACWE,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EA1CgBa,IAAAA,EAAAA,WAELC,SAAAA,EAAAA,EAAYC,GAAiB,EAAA,KAAA,GAChCC,KAAAA,YAAcF,EACdG,KAAAA,iBAAmBF,EACnBd,KAAAA,MAAQ,KAAKC,mBAqCrB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,mBAjCD,MAAA,WACQgB,IAAAA,EAAYd,SAASC,cAAc,OACvCa,EAAUZ,aAAa,QAAS,aAE5BQ,IAAAA,EAAaV,SAASC,cAAc,QACxCS,EAAWL,YAAc,KAAKO,YAC9BE,EAAUR,sBAAsB,aAAcI,GAE1CK,IAAAA,EAAcf,SAASC,cAAc,MAQlCa,OAPFD,KAAAA,iBAAiBG,QAAQ,SAAAC,GACtBC,IAAAA,EAAoBlB,SAASC,cAAc,MAC/CiB,EAAkBb,YAAcY,EAChCF,EAAYT,sBAAsB,YAAaY,KAEnDJ,EAAUR,sBAAsB,YAAaS,GAEtCD,IAiBV,CAAA,IAAA,aAdD,MAAA,WACQK,IAAAA,EAAuBnB,SAASQ,cAAc,cACrB,OAAzBW,GACAA,EAAqBC,WAW5B,CAAA,IAAA,WAND,MAAA,WACSC,KAAAA,aACDC,IAAAA,EAA4BtB,SAASQ,cAAc,8BACrB,OAA9Bc,GACAA,EAA0BhB,sBAAsB,aAAc,KAAKT,WAE1E,EA1CgBY,GA0ChB,QAAA,QAAA;;AC4EA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EArHL,IAAA,EAAA,EAAA,QAAA,mBACA,EAAA,EAAA,QAAA,iBAoHK,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAjHgBc,IAAAA,EAAAA,WAGH,SAAA,IAAA,EAAA,KAAA,GACL1B,KAAAA,MAAQ,KAAKC,mBA6GrB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,uBAzGD,MAAA,SAAqB0B,GACV,MAAA,CACHC,MAAOD,EAAaE,OAAOC,SAASF,MAAMG,MAC1CC,OAAQL,EAAaE,OAAOC,SAASE,OAAOD,MAC5CE,SAAUN,EAAaE,OAAOC,SAASG,SAASC,QAChDC,MAAOR,EAAaE,OAAOC,SAASK,MAAMC,eAoGjD,CAAA,IAAA,6BA/FD,MAAA,SAA2BC,GAChB,MAAA,CACHT,MAAOS,EAAcT,MAAMU,OAC3BC,KAAgC,IAA3BF,EAAcJ,SAAqB,UAAY,WACpDD,OAA2C,IAAnCQ,WAAWH,EAAcL,QACjCG,MAAOE,EAAcF,SA0F5B,CAAA,IAAA,4BArFD,MAAA,SAA0BE,GAClBjB,IAAAA,EAAS,GAUNA,MATqB,KAAxBiB,EAAcT,OACdR,EAAOqB,KAAK,SAEZC,MAAML,EAAcL,SACpBZ,EAAOqB,KAAK,UAEY,OAAxBJ,EAAcF,OACdf,EAAOqB,KAAK,SAETrB,IA0EV,CAAA,IAAA,uBAtED,MAAA,WACQuB,IAAAA,EAAexC,SAASQ,cAAc,UACrB,OAAjBgC,IACAA,EAAaP,YAAc,IAAIQ,QAmEtC,CAAA,IAAA,8BA9DD,MAAA,SAA4BC,GAAiB,IAAA,EAAA,KACzCA,EAAgBlC,cAAc,oBAAoBmC,iBAAiB,SAAU,SAAAC,GACzEA,EAAEC,iBACEX,IAAAA,EAAgB,EAAKY,2BAA2B,EAAKC,qBAAqBH,IAC1EjC,EAAkB,EAAKqC,0BAA0Bd,GACjDvB,GAA2B,IAA3BA,EAAgBsC,OAAc,CACvBC,EAAAA,QAAAA,oBAAoBhB,GACvBf,IAAAA,EAAuBnB,SAASQ,cAAc,cACrB,OAAzBW,GACAA,EAAqBC,SAEzBwB,EAAElB,OAAOyB,QACT,EAAKC,2BACF,CACU,IAAI3C,EAAJ,QAAc,gGAAiGE,GACrH0C,gBA+ClB,CAAA,IAAA,mBAzCD,MAAA,WACQX,IAAAA,EAAkB1C,SAASC,cAAc,WA8BtCyC,OA7BPA,EAAgBxC,aAAa,KAAM,6BACnCwC,EAAgBY,UAAhB,k+CA0BKC,KAAAA,4BAA4Bb,GAE1BA,IAUV,CAAA,IAAA,WAND,MAAA,WACQ3C,IAAAA,EAAoBC,SAASQ,cAAc,sBACrB,OAAtBT,IACAA,EAAkBO,sBAAsB,WAAY,KAAKT,OACpDuD,KAAAA,4BAEZ,EAjHgB7B,GAiHhB,QAAA,QAAA;;AClBA,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EApGgBiC,IAAAA,EAAAA,WAGLC,SAAAA,EAAAA,EAAMC,GAAO,EAAA,KAAA,GAChBC,KAAAA,MAAQF,EACRG,KAAAA,OAASF,EACTG,KAAAA,WAAa,GACbC,KAAAA,QAAU,EACVjE,KAAAA,MAAQ,KAAKC,mBA4FrB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,QAxFD,MAAA,WACW,OAAA,KAAK8D,SAuFf,CAAA,IAAA,OAnFD,MAAA,WACW,OAAA,KAAKD,QAkFf,CAAA,IAAA,OA9ED,MAAA,WACW,OAAA,KAAK9D,QA6Ef,CAAA,IAAA,sBA1ED,MAAA,SAAoBkE,GACXF,KAAAA,WAAWvB,KAAKyB,GAChBC,KAAAA,mBAwER,CAAA,IAAA,uBApED,MAAA,WACSH,KAAAA,WAAWI,KAAK,SAACC,EAAWC,GACzBD,OAAAA,EAAUlC,QAAUmC,EAAUnC,SACtB,EACDkC,EAAUlC,QAAUmC,EAAUnC,QAC9B,EAEHkC,EAAUE,YAAcD,EAAUC,aAC1B,EAED,MA0DtB,CAAA,IAAA,eAnDD,MAAA,WACQC,IAAAA,EAAe,EACdR,KAAAA,WAAW7C,QAAQ,SAAA+C,GACE,aAAlBA,EAAQ3B,MACRiC,GAAgBN,EAAQlC,SAExBwC,GAAgBN,EAAQlC,WAG3BiC,KAAAA,QAAUO,IA0ClB,CAAA,IAAA,mBAvCD,MAAA,WACQC,IAAAA,EAActE,SAASC,cAAc,WACzCqE,EAAYpE,aAAa,QAAS,eAE9BqE,IAAAA,EAAevE,SAASC,cAAc,MAEtCuE,EAAaxE,SAASC,cAAc,QACxCuE,EAAWtE,aAAa,QAAS,cACjCsE,EAAWnE,YAAiB,GAAA,OAAA,IAAIoC,KAAK,KAAKkB,MAAO,KAAKC,OAAS,GAAGa,eAAe,QAAS,CACtFC,MAAO,OACPC,KAAM,aAEVJ,EAAajE,sBAAsB,aAAckE,GAE7CH,IAAAA,EAAerE,SAASC,cAAc,QACtC,KAAK6D,SAAW,EAChBO,EAAanE,aAAa,QAAS,wBAEnCmE,EAAanE,aAAa,QAAS,wBAEvCmE,EAAahE,YAAiB,GAAA,QAAC,KAAKyD,QAAU,KAAKc,QAAQ,GAAGC,QAAQ,KAAM,KAA5E,MACAN,EAAajE,sBAAsB,YAAa+D,GAEhDC,EAAYhE,sBAAsB,aAAciE,GAE5CO,IAAAA,EAAgB9E,SAASC,cAAc,MAMpCqE,OALFT,KAAAA,WAAW7C,QAAQ,SAAA+C,GACpBe,EAAcxE,sBAAsB,YAAayD,EAAQgB,UAE7DT,EAAYhE,sBAAsB,YAAawE,GAExCR,IAQV,CAAA,IAAA,iBAJD,MAAA,WACSU,KAAAA,uBACAC,KAAAA,eACApF,KAAAA,MAAQ,KAAKC,uBACrB,EApGgB0D,GAoGhB,QAAA,QAAA;;ACdA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAtFL,IAAA,EAAA,EAAA,QAAA,qBAsFK,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAnFgB0B,IAAAA,EAAAA,WAGH,SAAA,IAAA,EAAA,KAAA,GACLC,KAAAA,cAAgB,GAChBtF,KAAAA,MAAQ,KAAKC,mBA8ErB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,uBA1ED,MAAA,SAAqBiE,GACbqB,IAAAA,EAAgBrB,EAAQ/B,QAAQyC,eAAe,QAAS,CAACC,MAAO,YAChEW,EAAetB,EAAQ/B,QAAQyC,eAAe,QAAS,CAACE,KAAM,YAC9DW,GAAwB,EACvBH,KAAAA,cAAcnE,QAAQ,SAAAsD,GACnBc,IAAkBd,EAAYZ,SAAW2B,IAAiBf,EAAYb,SACtEa,EAAYpB,oBAAoBa,GAChCuB,GAAwB,KAG3BA,GACIC,KAAAA,yBAAyBF,EAAcD,EAAerB,KA+DlE,CAAA,IAAA,2BA3DD,MAAA,SAAyBN,EAAMC,EAAOK,GAC9ByB,IAAAA,EAAmB,IAAIhC,EAAJ,QAAgBC,EAAMC,GAC7C8B,EAAiBtC,oBAAoBa,GAChCoB,KAAAA,cAAc7C,KAAKkD,KAwD3B,CAAA,IAAA,0BApDD,MAAA,WACSL,KAAAA,cAAclB,KAAK,SAACwB,EAAeC,GAChCD,OAAAA,EAAchC,OAASiC,EAAcjC,OAC9B,EACAgC,EAAchC,OAASiC,EAAcjC,QACpC,EAEJgC,EAAc/B,QAAUgC,EAAchC,QAC/B,GAEC,MA0CvB,CAAA,IAAA,mBAnCD,MAAA,WACQiC,IAAAA,EAAe3F,SAASC,cAAc,WAOnC0F,OANPA,EAAazF,aAAa,KAAM,gBAE3BiF,KAAAA,cAAcnE,QAAQ,SAAAsD,GACvBqB,EAAarF,sBAAsB,YAAagE,EAAYS,UAGzDY,IA2BV,CAAA,IAAA,gBAvBD,MAAA,SAAcC,GAAW,IAAA,EAAA,KAChBT,KAAAA,cAAgB,GACrBS,EAAU5E,QAAQ,SAAA+C,GAAW,OAAA,EAAK8B,qBAAqB9B,KAClD+B,KAAAA,0BACAjG,KAAAA,MAAQ,KAAKC,mBACbuD,KAAAA,aAkBR,CAAA,IAAA,aAdD,MAAA,WACQ0C,IAAAA,EAAuB/F,SAASQ,cAAc,iBACrB,OAAzBuF,GACAA,EAAqB3E,WAW5B,CAAA,IAAA,WAND,MAAA,WACQE,IAAAA,EAA4BtB,SAASQ,cAAc,8BACrB,OAA9Bc,IACKD,KAAAA,aACLC,EAA0BhB,sBAAsB,WAAY,KAAKT,YAExE,EAnFgBqF,GAmFhB,QAAA,QAAA;;ACGA,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAzFgBc,IAAAA,EAAAA,WAGH,SAAA,IAAA,EAAA,KAAA,GACLC,KAAAA,WAAa,EACbC,KAAAA,UAAY,EACZpC,KAAAA,QAAU,EACVjE,KAAAA,MAAQ,KAAKC,mBAkFrB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,gBA9ED,MAAA,SAAc8F,GAAW,IAAA,EAAA,KAChBK,KAAAA,WAAa,EACbC,KAAAA,UAAY,EACZpC,KAAAA,QAAU,EACf8B,EAAU5E,QAAQ,SAAA+C,GACNA,OAAAA,EAAQ3B,OACP,IAAA,WACD,EAAK6D,WAAa,EAAKA,WAAalC,EAAQlC,SAC5C,EAAKiC,QAAU,EAAKA,QAAUC,EAAQlC,SACtC,MACC,IAAA,UACD,EAAKqE,UAAY,EAAKA,UAAYnC,EAAQlC,SAC1C,EAAKiC,QAAU,EAAKA,QAAUC,EAAQlC,SACtC,MACJ,QACIsE,QAAQC,IAAgBrC,YAAAA,OAAAA,EAAQ3B,MAAhC,4BAIPvC,KAAAA,MAAQ,KAAKC,mBACbuD,KAAAA,aA0DR,CAAA,IAAA,mBAtDD,MAAA,WACQgD,IAAAA,EAAerG,SAASC,cAAc,SAC1CoG,EAAanG,aAAa,KAAM,gBAE5BqE,IAAAA,EAAevE,SAASC,cAAc,MAC1CsE,EAAalE,YAAc,uBAC3BgG,EAAa/F,sBAAsB,aAAciE,GAE7C+B,IAAAA,EAAkBtG,SAASC,cAAc,OAC7CqG,EAAgBpG,aAAa,QAAS,gCAClCqG,IAAAA,EAAkBvG,SAASC,cAAc,QAC7CsG,EAAgBlG,YAAc,sBAC9BiG,EAAgBhG,sBAAsB,aAAciG,GAChDC,IAAAA,EAAmBxG,SAASC,cAAc,QAC9CuG,EAAiBnG,YAAiB,GAAA,QAAC,KAAK4F,WAAa,KAAKrB,QAAQ,GAAGC,QAAQ,KAAM,KAAnF,MACAyB,EAAgBhG,sBAAsB,YAAakG,GACnDH,EAAa/F,sBAAsB,YAAagG,GAE5CG,IAAAA,EAAiBzG,SAASC,cAAc,OAC5CwG,EAAevG,aAAa,QAAS,+BACjCwG,IAAAA,EAAiB1G,SAASC,cAAc,QAC5CyG,EAAerG,YAAc,qBAC7BoG,EAAenG,sBAAsB,aAAcoG,GAC/CC,IAAAA,EAAkB3G,SAASC,cAAc,QAC7C0G,EAAgBtG,YAAiB,GAAA,QAAC,KAAK6F,UAAY,KAAKtB,QAAQ,GAAGC,QAAQ,KAAM,KAAjF,MACA4B,EAAenG,sBAAsB,YAAaqG,GAClDN,EAAa/F,sBAAsB,YAAamG,GAE5CG,IAAAA,EAAe5G,SAASC,cAAc,OAC1C2G,EAAa1G,aAAa,QAAS,6BAC/B2G,IAAAA,EAAe7G,SAASC,cAAc,QAC1C4G,EAAaxG,YAAc,kBAC3BuG,EAAatG,sBAAsB,aAAcuG,GAC7CC,IAAAA,EAAgB9G,SAASC,cAAc,QAMpCoG,OALFvC,KAAAA,SAAW,EAAIgD,EAAc5G,aAAa,QAAS,WAAa4G,EAAc5G,aAAa,QAAS,WACzG4G,EAAczG,YAAiB,GAAA,QAAC,KAAKyD,QAAU,KAAKc,QAAQ,GAAGC,QAAQ,KAAM,KAA7E,MACA+B,EAAatG,sBAAsB,YAAawG,GAChDT,EAAa/F,sBAAsB,YAAasG,GAEzCP,IAeV,CAAA,IAAA,aAXD,MAAA,WACQA,IAAAA,EAAerG,SAASQ,cAAc,iBACrB,OAAjB6F,GACAA,EAAajF,WAQpB,CAAA,IAAA,WAHD,MAAA,WACSC,KAAAA,aACLrB,SAASQ,cAAc,QAAQF,sBAAsB,YAAa,KAAKT,WAC1E,EAzFgBmG,GAyFhB,QAAA,QAAA;;ACCA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAzFL,IAAA,EAAA,EAAA,QAAA,iBAyFK,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAtFgBe,IAAAA,EAAAA,WAGLtF,SAAAA,EAAAA,EAAOI,EAAQO,EAAKJ,GAAO,EAAA,KAAA,GAC9BgF,KAAAA,OAASvF,EACTwF,KAAAA,QAAUpF,EACVqF,KAAAA,KAAO9E,EACP+E,KAAAA,OAASnF,EACToF,KAAAA,WAAa3E,KAAK4E,MAClBxH,KAAAA,MAAQ,KAAKC,mBA6ErB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,QAzED,MAAA,WACW,OAAA,KAAKkH,SAwEf,CAAA,IAAA,SApED,MAAA,WACW,OAAA,KAAKC,UAmEf,CAAA,IAAA,MA/DD,MAAA,WACW,OAAA,KAAKC,OA8Df,CAAA,IAAA,QA1DD,MAAA,WACW,OAAA,KAAKC,SAyDf,CAAA,IAAA,YArDD,MAAA,WACW,OAAA,KAAKC,aAoDf,CAAA,IAAA,OAhDD,MAAA,WACW,OAAA,KAAKvH,QA+Cf,CAAA,IAAA,uCA3CD,MAAA,SAAqCyH,GACjCA,EAAY9G,cAAc,qBAAqBmC,iBAAiB,QAAS,SAAAC,GACjEwB,IAAAA,EAAYxB,EAAElB,OAAO6F,cAAcC,aAAa,kBAC7CC,EAAAA,QAAAA,kBAAkBrD,OAwChC,CAAA,IAAA,mBAnCD,MAAA,WACQkD,IAAAA,EAActH,SAASC,cAAc,MAC3B,aAATiH,KAAAA,KAAsBI,EAAYpH,aAAa,QAAS,YAAcoH,EAAYpH,aAAa,QAAS,WAC7GoH,EAAYpH,aAAa,iBAAkB,KAAKkH,YAE5CpF,IAAAA,EAAQhC,SAASC,cAAc,QACnC+B,EAAM9B,aAAa,QAAS,SAC5B8B,EAAM3B,YAAc,KAAK8G,OAAOO,mBAAmB,QAAS,CACxD/C,KAAM,UACND,MAAO,UACPiD,IAAK,YAETL,EAAYhH,sBAAsB,aAAc0B,GAE5CP,IAAAA,EAAQzB,SAASC,cAAc,QACnCwB,EAAMvB,aAAa,QAAS,SAC5BuB,EAAMpB,YAAc,KAAK2G,OACzBhF,EAAM1B,sBAAsB,WAAYmB,GAEpCI,IAAAA,EAAS7B,SAASC,cAAc,QACpC4B,EAAO3B,aAAa,QAAS,UAC7B2B,EAAOxB,YAAiB,GAAA,QAAC,KAAK4G,QAAU,KAAKrC,QAAQ,GAAGC,QAAQ,KAAM,KAAtE,MACApD,EAAMnB,sBAAsB,WAAYuB,GAEpC+F,IAAAA,EAAS5H,SAASC,cAAc,UACpC2H,EAAO1H,aAAa,QAAS,oBAC7B2B,EAAOvB,sBAAsB,WAAYsH,GAErCC,IAAAA,EAAO7H,SAASC,cAAc,KAM3BqH,OALPO,EAAK3H,aAAa,QAAS,gBAC3B0H,EAAOtH,sBAAsB,aAAcuH,GAEtCC,KAAAA,qCAAqCR,GAEnCA,MACV,EAtFgBP,GAsFhB,QAAA,QAAA;;ACdA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAzEL,IAAA,EAAA,EAAA,QAAA,2BACA,EAAA,EAAA,QAAA,yBACA,EAAA,EAAA,QAAA,8BACA,EAAA,EAAA,QAAA,sBACA,EAAA,EAAA,QAAA,iBAqEK,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAlEgBgB,IAAAA,EAAAA,WAKH,SAAA,IAAA,EAAA,KAAA,GACLlE,KAAAA,WAAa,GACbmE,KAAAA,mBAAqB,IAAIpI,EAAJ,QACrBqI,KAAAA,iBAAmB,IAAI1G,EAAJ,QACnB2G,KAAAA,sBAAwB,IAAIhD,EAAJ,QACxBiD,KAAAA,cAAgB,IAAInC,EAAJ,QAChBoC,KAAAA,oBAuDR,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,sBApDD,MAAA,SAAoBC,GACZC,IAAAA,EAAgB,IAAIvB,EAAJ,QAChBsB,EAAc5G,MACd4G,EAAcxG,OACdwG,EAAcjG,IACdiG,EAAcrG,OAEb6B,KAAAA,WAAWvB,KAAKgG,GAChBJ,KAAAA,sBAAsBK,cAAc,KAAK1E,YACzCsE,KAAAA,cAAcI,cAAc,KAAK1E,YACjC2E,KAAAA,eA0CR,CAAA,IAAA,oBAvCD,MAAA,SAAkBpE,GAET,IADDqE,IAAAA,EACKC,EAAI,EAAGA,EAAI,KAAK7E,WAAWZ,OAAQyF,IACpC,GAAA,KAAK7E,WAAW6E,GAAGtE,cAAgBuE,SAASvE,GAAY,CACxDqE,EAAcC,EACd,MAGH7E,KAAAA,WAAW+E,OAAOH,EAAa,GAC/BP,KAAAA,sBAAsBK,cAAc,KAAK1E,YACzCsE,KAAAA,cAAcI,cAAc,KAAK1E,YACjC2E,KAAAA,eA4BR,CAAA,IAAA,aAxBD,MAAA,WACIK,aAAaC,QAAQ,YAAaC,KAAKC,UAAU,KAAKnF,eAuBzD,CAAA,IAAA,oBApBD,MAAA,WAAoB,IAAA,EAAA,KACZoF,EAAyBJ,aAAaK,QAAQ,aACnB,OAA3BD,GACAF,KAAKI,MAAMF,GAAwBjI,QAAQ,SAAA+C,GACvC,EAAKb,oBAAoB,CACrBzB,MAAOsC,EAAQiD,OACfnF,OAAQkC,EAAQkD,QAChB7E,IAAK2B,EAAQmD,KACblF,MAAO,IAAIS,KAAKsB,EAAQoD,cAYvC,CAAA,IAAA,QALD,MAAA,WACSa,KAAAA,mBAAmB3E,WACnB4E,KAAAA,iBAAiB5E,WACjB6E,KAAAA,sBAAsB7E,WACtB8E,KAAAA,cAAc9E,eACtB,EAlEgB0E,GAkEhB,QAAA,QAAA;;AClEUqB,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EANf,IAAA,EAAA,EAAA,QAAA,+BAMeA,SAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,WAAAA,EAAAA,CAAAA,QAAAA,GAHf,IAAIA,EAAS,IAAIrB,EAAJ,QACbqB,EAAOC,QAEQD,IAAAA,EAAAA,EAAAA,QAAAA,QAAAA","file":"budget.e7f3fd4e.js","sourceRoot":"..","sourcesContent":["\r\nexport default class Navigationsleiste {\r\n\r\n\r\n  constructor() {\r\n    this._html = this._html_generieren();\r\n  }\r\n\r\n\r\n  _html_generieren() {\r\n    let navigationsleiste = document.createElement(\"nav\");\r\n    navigationsleiste.setAttribute(\"id\", \"navigationsleiste\");\r\n\r\n    let anker = document.createElement(\"a\");\r\n    anker.setAttribute(\"href\", \"#\");\r\n\r\n    let span = document.createElement(\"span\");\r\n    span.setAttribute(\"id\", \"markenname\");\r\n    span.textContent = \"Monatlichen Budget/ Montly Budget\";\r\n    anker.insertAdjacentElement(\"afterbegin\", span);\r\n\r\n    navigationsleiste.insertAdjacentElement(\"afterbegin\", anker);\r\n\r\n    return navigationsleiste;\r\n  }\r\n\r\n\r\n  anzeigen() {\r\n    let body = document.querySelector(\"body\");\r\n    if (body !== null) {\r\n      body.insertAdjacentElement(\"afterbegin\", this._html);\r\n    }\r\n  }\r\n\r\n\r\n}","\r\nexport default class Fehlerbox {\r\n\r\n    constructor(fehlertext, formular_fehler) {\r\n        this._fehlertext = fehlertext;\r\n        this._formular_fehler = formular_fehler;\r\n        this._html = this._html_generieren();\r\n    }\r\n\r\n\r\n    _html_generieren() {\r\n        let fehlerbox = document.createElement(\"div\");\r\n        fehlerbox.setAttribute(\"class\", \"fehlerbox\");\r\n\r\n        let fehlertext = document.createElement(\"span\");\r\n        fehlertext.textContent = this._fehlertext;\r\n        fehlerbox.insertAdjacentElement(\"afterbegin\", fehlertext);\r\n\r\n        let fehlerliste = document.createElement(\"ul\");\r\n        this._formular_fehler.forEach(fehler => {\r\n            let fehlerlistenpunkt = document.createElement(\"li\");\r\n            fehlerlistenpunkt.textContent = fehler;\r\n            fehlerliste.insertAdjacentElement(\"beforeend\", fehlerlistenpunkt);\r\n        });\r\n        fehlerbox.insertAdjacentElement(\"beforeend\", fehlerliste);\r\n\r\n        return fehlerbox;\r\n    }\r\n\r\n    _entfernen() {\r\n        let bestehende_fehlerbox = document.querySelector(\".fehlerbox\");\r\n        if (bestehende_fehlerbox !== null) {\r\n            bestehende_fehlerbox.remove();\r\n        }\r\n    }\r\n\r\n\r\n    anzeigen() {\r\n        this._entfernen();\r\n        let eingabeformular_container = document.querySelector(\"#eingabeformular-container\");\r\n        if (eingabeformular_container !== null) {\r\n            eingabeformular_container.insertAdjacentElement(\"afterbegin\", this._html);\r\n        }\r\n    }\r\n \r\n}","\r\n\r\nimport Fehlerbox from \"./Fehlerbox.js\";\r\nimport budget from \"../budget.js\";\r\n\r\n\r\nexport default class Eingabeformular {\r\n\r\n\r\n    constructor() {\r\n        this._html = this._html_generieren();\r\n    }\r\n\r\n\r\n    _formulardaten_holen(submit_event) {\r\n        return {\r\n            titel: submit_event.target.elements.titel.value,\r\n            betrag: submit_event.target.elements.betrag.value,\r\n            einnahme: submit_event.target.elements.einnahme.checked,\r\n            datum: submit_event.target.elements.datum.valueAsDate\r\n        }\r\n    }\r\n\r\n\r\n    _formulardaten_verarbeiten(formulardaten) {\r\n        return {\r\n            titel: formulardaten.titel.trim(),\r\n            typ: formulardaten.einnahme === false ? \"ausgabe\" : \"einnahme\",\r\n            betrag: parseFloat(formulardaten.betrag) * 100,\r\n            datum: formulardaten.datum\r\n        }\r\n    }\r\n\r\n\r\n    _formulardaten_validieren(formulardaten) {\r\n        let fehler = [];\r\n        if (formulardaten.titel === \"\") {\r\n            fehler.push(\"Titel\");\r\n        }\r\n        if (isNaN(formulardaten.betrag)) {\r\n            fehler.push(\"Betrag\");\r\n        }\r\n        if (formulardaten.datum === null) {\r\n            fehler.push(\"Datum\");\r\n        }\r\n        return fehler;\r\n    }\r\n\r\n\r\n    _datum_aktualisieren() {\r\n        let datums_input = document.querySelector(\"#datum\");\r\n        if (datums_input !== null) {\r\n            datums_input.valueAsDate = new Date();\r\n        }\r\n    }\r\n\r\n\r\n    _absenden_event_hinzufuegen(eingabeformular) {\r\n        eingabeformular.querySelector(\"#eingabeformular\").addEventListener(\"submit\", e => {\r\n            e.preventDefault();\r\n            let formulardaten = this._formulardaten_verarbeiten(this._formulardaten_holen(e));\r\n            let formular_fehler = this._formulardaten_validieren(formulardaten);\r\n            if (formular_fehler.length === 0) {\r\n                budget.eintrag_hinzufuegen(formulardaten);\r\n                let bestehende_fehlerbox = document.querySelector(\".fehlerbox\");\r\n                if (bestehende_fehlerbox !== null) {\r\n                    bestehende_fehlerbox.remove();\r\n                }\r\n                e.target.reset();\r\n                this._datum_aktualisieren();\r\n            } else {\r\n                let fehler = new Fehlerbox(\"Folgende Felder wurden nicht korrekt ausgefüllt:/The following items weren't filled correctly\", formular_fehler);\r\n                fehler.anzeigen();\r\n            }   \r\n        });\r\n    }\r\n\r\n\r\n    _html_generieren() {\r\n        let eingabeformular = document.createElement(\"section\");\r\n        eingabeformular.setAttribute(\"id\", \"eingabeformular-container\");\r\n        eingabeformular.innerHTML = `<form id=\"eingabeformular\" action=\"#\" method=\"get\"></form>\r\n        <div class=\"eingabeformular-zeile\">\r\n            <h1> Einnahme/earning || Ausgabe/expense </h1>\r\n        </div>\r\n        <div class=\"eingabeformular-zeile\">\r\n            <div class=\"titel-typ-eingabe-gruppe\">\r\n                <label for=\"titel\">Titel</label>\r\n                <input type=\"text\" id=\"titel\" form=\"eingabeformular\" name=\"titel\" placeholder=\"pan\" size=\"10\" title=\"Item name\">\r\n                <input type=\"radio\" id=\"einnahme\" name=\"typ\" value=\"einnahme\" form=\"eingabeformular\" >\r\n                <label for=\"einnahme\" >Einnahme</label>\r\n                <input type=\"radio\" id=\"ausgabe\" name=\"typ\" value=\"ausgabe\" form=\"eingabeformular\"  checked>\r\n                <label for=\"ausgabe\" >Ausgabe\"</label>\r\n            </div>\r\n        </div>\r\n        <div class=\"eingabeformular-zeile\">\r\n            <div class=\"betrag-datum-eingabe-gruppe\">\r\n                <label for=\"betrag\">Betrag</label>\r\n                <input type=\"number\" id=\"betrag\" name=\"betrag\" form=\"eingabeformular\" placeholder=\"xx,xx\" size=\"10\" step=\"0.01\" min=\"0.01\" title=\"Betrag des Eintrags (Just the number)\">\r\n                <label for=\"datum\">Datum/Date</label>\r\n                <input type=\"date\" id=\"datum\" name=\"datum\" form=\"eingabeformular\" size=\"10\">\r\n            </div>\r\n        </div>\r\n        <div class=\"eingabeformular-zeile\">\r\n            <button class=\"standard\" type=\"submit\" form=\"eingabeformular\">Hinzufügen/Add</button>\r\n        </div>`;\r\n\r\n        this._absenden_event_hinzufuegen(eingabeformular);\r\n\r\n        return eingabeformular;\r\n    }\r\n\r\n   \r\n    anzeigen() {\r\n        let navigationsleiste = document.querySelector(\"#navigationsleiste\");\r\n        if (navigationsleiste !== null) {\r\n            navigationsleiste.insertAdjacentElement(\"afterend\", this._html);\r\n            this._datum_aktualisieren();\r\n        }      \r\n    }\r\n\r\n    \r\n}","\r\nexport default class Monatsliste {\r\n\r\n\r\n    constructor(jahr, monat) {\r\n        this._jahr = jahr;\r\n        this._monat = monat;\r\n        this._eintraege = [];\r\n        this._bilanz = 0;\r\n        this._html = this._html_generieren();\r\n    }\r\n\r\n\r\n    monat() {\r\n        return this._monat;\r\n    }\r\n\r\n\r\n    jahr() {\r\n        return this._jahr;\r\n    }\r\n\r\n\r\n    html() {\r\n        return this._html;\r\n    }\r\n\r\n    eintrag_hinzufuegen(eintrag) {\r\n        this._eintraege.push(eintrag);\r\n        this._aktualisieren();\r\n    }\r\n\r\n\r\n    _eintraege_sortieren() {\r\n        this._eintraege.sort((eintrag_a, eintrag_b) => {\r\n            if (eintrag_a.datum() > eintrag_b.datum()) {\r\n                return -1;\r\n            } else if (eintrag_a.datum() < eintrag_b.datum()) {\r\n                return 1;\r\n            } else {\r\n                if (eintrag_a.timestamp() > eintrag_b.timestamp()) {\r\n                    return -1;\r\n                } else {\r\n                    return 1;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    _bilanzieren() {\r\n        let monatsbilanz = 0;\r\n        this._eintraege.forEach(eintrag => {\r\n            if (eintrag.typ() === \"einnahme\") {\r\n                monatsbilanz += eintrag.betrag();\r\n            } else {\r\n                monatsbilanz -= eintrag.betrag();\r\n            }\r\n        });\r\n        this._bilanz = monatsbilanz;\r\n    }\r\n\r\n    _html_generieren() {\r\n        let monatsliste = document.createElement(\"article\");\r\n        monatsliste.setAttribute(\"class\", \"monatsliste\");\r\n\r\n        let ueberschrift = document.createElement(\"h2\");\r\n\r\n        let monat_jahr = document.createElement(\"span\");\r\n        monat_jahr.setAttribute(\"class\", \"monat-jahr\");\r\n        monat_jahr.textContent = `${new Date(this._jahr, this._monat - 1).toLocaleString(\"de-DE\", {\r\n            month: \"long\",\r\n            year: \"numeric\"\r\n        })}`;\r\n        ueberschrift.insertAdjacentElement(\"afterbegin\", monat_jahr);\r\n\r\n        let monatsbilanz = document.createElement(\"span\");\r\n        if (this._bilanz >= 0) {\r\n            monatsbilanz.setAttribute(\"class\", \"monatsbilanz positiv\");\r\n        } else {\r\n            monatsbilanz.setAttribute(\"class\", \"monatsbilanz negativ\");\r\n        }\r\n        monatsbilanz.textContent = `${(this._bilanz / 100).toFixed(2).replace(/\\./, \",\")} €`;\r\n        ueberschrift.insertAdjacentElement(\"beforeend\", monatsbilanz);\r\n\r\n        monatsliste.insertAdjacentElement(\"afterbegin\", ueberschrift);\r\n\r\n        let eintragsliste = document.createElement(\"ul\");\r\n        this._eintraege.forEach(eintrag => {\r\n            eintragsliste.insertAdjacentElement(\"beforeend\", eintrag.html()); \r\n        });\r\n        monatsliste.insertAdjacentElement(\"beforeend\", eintragsliste);\r\n\r\n        return monatsliste;\r\n    }\r\n\r\n\r\n    _aktualisieren() {\r\n        this._eintraege_sortieren();\r\n        this._bilanzieren();\r\n        this._html = this._html_generieren();\r\n    }\r\n\r\n    \r\n}","\r\nimport Monatsliste from \"./Monatsliste.js\";\r\n\r\n\r\nexport default class Monatslistensammlung {\r\n\r\n\r\n    constructor() {\r\n        this._monatslisten = [];\r\n        this._html = this._html_generieren();\r\n    }\r\n\r\n\r\n    _eintrag_hinzufuegen(eintrag) {\r\n        let eintragsmonat = eintrag.datum().toLocaleString(\"de-DE\", {month: \"numeric\"});\r\n        let eintragsjahr = eintrag.datum().toLocaleString(\"de-DE\", {year: \"numeric\"});\r\n        let monatsliste_vorhanden = false;\r\n        this._monatslisten.forEach(monatsliste => {\r\n            if (eintragsmonat === monatsliste.monat() && eintragsjahr === monatsliste.jahr()) {\r\n                monatsliste.eintrag_hinzufuegen(eintrag);\r\n                monatsliste_vorhanden = true;\r\n            }\r\n        });\r\n        if (!monatsliste_vorhanden) {\r\n            this._monatsliste_hinzufuegen(eintragsjahr, eintragsmonat, eintrag);\r\n        }\r\n    }\r\n\r\n    _monatsliste_hinzufuegen(jahr, monat, eintrag) {\r\n        let neue_monatsliste = new Monatsliste(jahr, monat);\r\n        neue_monatsliste.eintrag_hinzufuegen(eintrag);\r\n        this._monatslisten.push(neue_monatsliste);\r\n    }\r\n\r\n\r\n    _monatslisten_sortieren() {\r\n        this._monatslisten.sort((monatsliste_a, monatsliste_b) => {\r\n            if (monatsliste_a.jahr() < monatsliste_b.jahr()) {\r\n                return 1;\r\n            } else if (monatsliste_a.jahr() > monatsliste_b.jahr()) {\r\n                return -1;\r\n            } else {\r\n                if (monatsliste_a.monat() < monatsliste_b.monat()) {\r\n                    return 1;\r\n                } else {\r\n                    return -1;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n \r\n    _html_generieren() {\r\n        let monatslisten = document.createElement(\"section\");\r\n        monatslisten.setAttribute(\"id\", \"monatslisten\");\r\n\r\n        this._monatslisten.forEach(monatsliste => {\r\n            monatslisten.insertAdjacentElement(\"beforeend\", monatsliste.html());\r\n        });\r\n\r\n        return monatslisten;\r\n    }\r\n\r\n\r\n    aktualisieren(eintraege) {\r\n        this._monatslisten = [];\r\n        eintraege.forEach(eintrag => this._eintrag_hinzufuegen(eintrag));\r\n        this._monatslisten_sortieren();\r\n        this._html = this._html_generieren();\r\n        this.anzeigen();\r\n    }\r\n\r\n\r\n    _entfernen() {\r\n        let monatslistensammlung = document.querySelector(\"#monatslisten\");\r\n        if (monatslistensammlung !== null) {\r\n            monatslistensammlung.remove();\r\n        }\r\n    }\r\n\r\n \r\n    anzeigen() {\r\n        let eingabeformular_container = document.querySelector(\"#eingabeformular-container\");\r\n        if (eingabeformular_container !== null) {\r\n            this._entfernen();\r\n            eingabeformular_container.insertAdjacentElement(\"afterend\", this._html);\r\n        }\r\n    }\r\n\r\n    \r\n}","\r\nexport default class Gesamtbilanz {\r\n\r\n\r\n    constructor() {\r\n        this._einnahmen = 0;\r\n        this._ausgaben = 0;\r\n        this._bilanz = 0;\r\n        this._html = this._html_generieren();\r\n    }\r\n\r\n\r\n    aktualisieren(eintraege) {\r\n        this._einnahmen = 0;\r\n        this._ausgaben = 0;\r\n        this._bilanz = 0;\r\n        eintraege.forEach(eintrag => {\r\n            switch (eintrag.typ()) {\r\n                case \"einnahme\":\r\n                    this._einnahmen = this._einnahmen + eintrag.betrag();\r\n                    this._bilanz = this._bilanz + eintrag.betrag();\r\n                    break;\r\n                case \"ausgabe\":\r\n                    this._ausgaben = this._ausgaben + eintrag.betrag();\r\n                    this._bilanz = this._bilanz - eintrag.betrag();\r\n                    break;\r\n                default:\r\n                    console.log(`Der Typ \"${eintrag.typ()}\" ist nicht bekannt.`);\r\n                    break;\r\n            }\r\n        });\r\n        this._html = this._html_generieren();\r\n        this.anzeigen();\r\n    }\r\n\r\n\r\n    _html_generieren() {\r\n        let gesamtbilanz = document.createElement(\"aside\");\r\n        gesamtbilanz.setAttribute(\"id\", \"gesamtbilanz\");\r\n\r\n        let ueberschrift = document.createElement(\"h1\");\r\n        ueberschrift.textContent = \"Gesamtbilanz/Balance\";\r\n        gesamtbilanz.insertAdjacentElement(\"afterbegin\", ueberschrift);\r\n\r\n        let einnahmen_zeile = document.createElement(\"div\");\r\n        einnahmen_zeile.setAttribute(\"class\", \"gesamtbilanz-zeile einnahmen\");\r\n        let einnahmen_titel = document.createElement(\"span\");\r\n        einnahmen_titel.textContent = \"Einnahmen/Earnings:\";\r\n        einnahmen_zeile.insertAdjacentElement(\"afterbegin\", einnahmen_titel);\r\n        let einnahmen_betrag = document.createElement(\"span\");\r\n        einnahmen_betrag.textContent = `${(this._einnahmen / 100).toFixed(2).replace(/\\./, \",\")} $`;\r\n        einnahmen_zeile.insertAdjacentElement(\"beforeend\", einnahmen_betrag);\r\n        gesamtbilanz.insertAdjacentElement(\"beforeend\", einnahmen_zeile);\r\n\r\n        let ausgaben_zeile = document.createElement(\"div\");\r\n        ausgaben_zeile.setAttribute(\"class\", \"gesamtbilanz-zeile ausgaben\");\r\n        let ausgaben_titel = document.createElement(\"span\");\r\n        ausgaben_titel.textContent = \"Ausgaben/Expenses:\";\r\n        ausgaben_zeile.insertAdjacentElement(\"afterbegin\", ausgaben_titel);\r\n        let ausgaben_betrag = document.createElement(\"span\");\r\n        ausgaben_betrag.textContent = `${(this._ausgaben / 100).toFixed(2).replace(/\\./, \",\")} $`;\r\n        ausgaben_zeile.insertAdjacentElement(\"beforeend\", ausgaben_betrag);\r\n        gesamtbilanz.insertAdjacentElement(\"beforeend\", ausgaben_zeile);\r\n\r\n        let bilanz_zeile = document.createElement(\"div\");\r\n        bilanz_zeile.setAttribute(\"class\", \"gesamtbilanz-zeile bilanz\");\r\n        let bilanz_titel = document.createElement(\"span\");\r\n        bilanz_titel.textContent = \"Bilanz/Balance:\";\r\n        bilanz_zeile.insertAdjacentElement(\"afterbegin\", bilanz_titel);\r\n        let bilanz_betrag = document.createElement(\"span\");\r\n        this._bilanz >= 0 ? bilanz_betrag.setAttribute(\"class\", \"positiv\") : bilanz_betrag.setAttribute(\"class\", \"negativ\");\r\n        bilanz_betrag.textContent = `${(this._bilanz / 100).toFixed(2).replace(/\\./, \",\")} €`;\r\n        bilanz_zeile.insertAdjacentElement(\"beforeend\", bilanz_betrag);\r\n        gesamtbilanz.insertAdjacentElement(\"beforeend\", bilanz_zeile);\r\n\r\n        return gesamtbilanz;\r\n    }\r\n\r\n\r\n    _entfernen() {\r\n        let gesamtbilanz = document.querySelector(\"#gesamtbilanz\");\r\n        if (gesamtbilanz !== null) {\r\n            gesamtbilanz.remove();\r\n        }\r\n    }\r\n\r\n \r\n    anzeigen() {\r\n        this._entfernen();\r\n        document.querySelector(\"body\").insertAdjacentElement(\"beforeend\", this._html);\r\n    }\r\n\r\n}","\r\n\r\nimport budget from \"../budget.js\";\r\n\r\n\r\nexport default class Eintrag {\r\n\r\n\r\n    constructor(titel, betrag, typ, datum) {\r\n        this._titel = titel;\r\n        this._betrag = betrag;\r\n        this._typ = typ;\r\n        this._datum = datum;\r\n        this._timestamp = Date.now();\r\n        this._html = this._html_generieren();\r\n    }\r\n\r\n\r\n    titel() {\r\n        return this._titel;\r\n    }\r\n\r\n \r\n    betrag() {\r\n        return this._betrag;\r\n    }\r\n\r\n\r\n    typ() {\r\n        return this._typ;\r\n    }\r\n\r\n\r\n    datum() {\r\n        return this._datum;\r\n    }\r\n\r\n\r\n    timestamp() {\r\n        return this._timestamp;\r\n    }\r\n\r\n\r\n    html() {\r\n        return this._html;\r\n    }\r\n\r\n\r\n    _eintrag_entfernen_event_hinzufuegen(listenpunkt) {\r\n        listenpunkt.querySelector(\".entfernen-button\").addEventListener(\"click\", e => {\r\n            let timestamp = e.target.parentElement.getAttribute(\"data-timestamp\");\r\n            budget.eintrag_entfernen(timestamp);\r\n        });\r\n    }\r\n\r\n\r\n    _html_generieren() {\r\n        let listenpunkt = document.createElement(\"li\");\r\n        this._typ === \"einnahme\" ? listenpunkt.setAttribute(\"class\", \"einnahme\") : listenpunkt.setAttribute(\"class\", \"ausgabe\");\r\n        listenpunkt.setAttribute(\"data-timestamp\", this._timestamp);\r\n\r\n        let datum = document.createElement(\"span\");\r\n        datum.setAttribute(\"class\", \"datum\");\r\n        datum.textContent = this._datum.toLocaleDateString(\"de-DE\", {\r\n            year: \"numeric\",\r\n            month: \"2-digit\",\r\n            day: \"2-digit\"\r\n        });\r\n        listenpunkt.insertAdjacentElement(\"afterbegin\", datum);\r\n\r\n        let titel = document.createElement(\"span\");\r\n        titel.setAttribute(\"class\", \"titel\");\r\n        titel.textContent = this._titel;\r\n        datum.insertAdjacentElement(\"afterend\", titel);\r\n\r\n        let betrag = document.createElement(\"span\");\r\n        betrag.setAttribute(\"class\", \"betrag\");\r\n        betrag.textContent = `${(this._betrag / 100).toFixed(2).replace(/\\./, \",\")} €`;\r\n        titel.insertAdjacentElement(\"afterend\", betrag);\r\n\r\n        let button = document.createElement(\"button\");\r\n        button.setAttribute(\"class\", \"entfernen-button\");\r\n        betrag.insertAdjacentElement(\"afterend\", button);\r\n\r\n        let icon = document.createElement(\"i\");\r\n        icon.setAttribute(\"class\", \"fas fa-trash\");\r\n        button.insertAdjacentElement(\"afterbegin\", icon);\r\n\r\n        this._eintrag_entfernen_event_hinzufuegen(listenpunkt);\r\n\r\n        return listenpunkt;\r\n    }\r\n    \r\n}","/**\r\n  @module classes/Haushaltsbuch\r\n */\r\n\r\nimport Navigationsleiste from \"./Navigationsleiste.js\";\r\nimport Eingabeformular from \"./Eingabeformular.js\";\r\nimport Monatslistensammlung from \"./Monatslistensammlung.js\";\r\nimport Gesamtbilanz from \"./Gesamtbilanz.js\";\r\nimport Eintrag from \"./Eintrag.js\";\r\n\r\n\r\nexport default class Haushaltsbuch {\r\n\r\n    /**\r\n     * @property {Array} _eintraege - array with the eintraege or input data\r\n     */\r\n    constructor() {\r\n        this._eintraege = [];\r\n        this._navigationsleiste = new Navigationsleiste();\r\n        this._eingabeformular = new Eingabeformular();\r\n        this._monatslistensammlung = new Monatslistensammlung();\r\n        this._gesamtbilanz = new Gesamtbilanz();\r\n        this._wiederherstellen();\r\n    }\r\n\r\n    eintrag_hinzufuegen(eintragsdaten) {\r\n        let neuer_eintrag = new Eintrag(\r\n            eintragsdaten.titel,\r\n            eintragsdaten.betrag,\r\n            eintragsdaten.typ,\r\n            eintragsdaten.datum\r\n        );\r\n        this._eintraege.push(neuer_eintrag);\r\n        this._monatslistensammlung.aktualisieren(this._eintraege);\r\n        this._gesamtbilanz.aktualisieren(this._eintraege);\r\n        this._speichern();\r\n    }\r\n\r\n    eintrag_entfernen(timestamp) {\r\n        let start_index;\r\n        for (let i = 0; i < this._eintraege.length; i++) {\r\n            if (this._eintraege[i].timestamp() === parseInt(timestamp)) {\r\n                start_index = i;\r\n                break;\r\n            }\r\n        }\r\n        this._eintraege.splice(start_index, 1);\r\n        this._monatslistensammlung.aktualisieren(this._eintraege);\r\n        this._gesamtbilanz.aktualisieren(this._eintraege);\r\n        this._speichern();\r\n    }\r\n\r\n\r\n    _speichern() {\r\n        localStorage.setItem(\"eintraege\", JSON.stringify(this._eintraege));\r\n    }\r\n\r\n    _wiederherstellen() {\r\n        let gespeicherte_eintraege = localStorage.getItem(\"eintraege\");\r\n        if (gespeicherte_eintraege !== null) {\r\n            JSON.parse(gespeicherte_eintraege).forEach(eintrag => {\r\n                this.eintrag_hinzufuegen({\r\n                    titel: eintrag._titel,\r\n                    betrag: eintrag._betrag,\r\n                    typ: eintrag._typ,\r\n                    datum: new Date(eintrag._datum)\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    start() {\r\n        this._navigationsleiste.anzeigen();\r\n        this._eingabeformular.anzeigen();\r\n        this._monatslistensammlung.anzeigen();\r\n        this._gesamtbilanz.anzeigen();\r\n    }\r\n\r\n\r\n}\r\n\r\n","/**\r\n * modulo main principal\r\n * @module main\r\n */\r\n\r\nimport Haushaltsbuch from \"./classes/Haushaltsbuch.js\";\r\n\r\n\r\nlet budget = new Haushaltsbuch();\r\nbudget.start();\r\n\r\nexport default budget;\r\n"]}